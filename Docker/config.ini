# the endpoint upon which to listen for incoming connections (evt::bnet_plugin)
bnet-endpoint = 0.0.0.0:4321

# the number of threads to use to process network messages (evt::bnet_plugin)
# bnet-threads = 

# remote endpoint of other node to connect to; Use multiple bnet-connect options as needed to compose a network (evt::bnet_plugin)
# bnet-connect = 

# this peer will request no pending transactions from other nodes (evt::bnet_plugin)
bnet-no-trx = false

# the location of the blocks directory (absolute path or relative to application data dir) (evt::chain_plugin)
blocks-dir = "/opt/evt/data/evtd/blocks"

# the location of the token database directory (absolute path or relative to application data dir) (evt::chain_plugin)
tokendb-dir = "/opt/evt/data/evtd/tokendb"

# Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints. (evt::chain_plugin)
# checkpoint = 

# Maximum size (in MB) of the chain state database (evt::chain_plugin)
chain-state-db-size-mb = 1024

# Maximum size (in MB) of the reversible blocks database (evt::chain_plugin)
reversible-blocks-db-size-mb = 340

# print contract's output to console (evt::chain_plugin)
contracts-console = false

# The local IP and port to listen for incoming http connections; set blank to disable. (evt::http_plugin)
http-server-address = 0.0.0.0:8888

# The local IP and port to listen for incoming https connections; leave blank to disable. (evt::http_plugin)
# https-server-address = 

# Filename with the certificate chain to present on https connections. PEM format. Required for https. (evt::http_plugin)
# https-certificate-chain-file = 

# Filename with https private key in PEM format. Required for https (evt::http_plugin)
# https-private-key-file = 

# Specify the Access-Control-Allow-Origin to be returned on each request. (evt::http_plugin)
access-control-allow-origin = *

# Specify the Access-Control-Allow-Headers to be returned on each request. (evt::http_plugin)
access-control-allow-headers = Origin, X-Requested-With, Content-Type, Accept

# Specify the Access-Control-Max-Age to be returned on each request. (evt::http_plugin)
access-control-max-age = 600

# Specify if Access-Control-Allow-Credentials: true should be returned on each request. (evt::http_plugin)
access-control-allow-credentials = false

# The actual host:port used to listen for incoming p2p connections. (evt::net_plugin)
p2p-listen-endpoint = 0.0.0.0:9876

# An externally accessible host:port for identifying this node. Defaults to p2p-listen-endpoint. (evt::net_plugin)
# p2p-server-address = 

# The public endpoint of a peer node to connect to. Use multiple p2p-peer-address options as needed to compose a network. (evt::net_plugin)
# p2p-peer-address = 

# Maximum number of client0nodes from any single IP address (evt::net_plugin)
p2p-max-nodes-per-host = 1

# The name supplied to identify this node amongst the peers. (evt::net_plugin)
agent-name = "EVT Test Agent"

# Can be 'any' or 'producers' or 'specified' or 'none'. If 'specified', peer-key must be specified at least once. If only 'producers', peer-key is not required. 'producers' and 'specified' may be combined. (evt::net_plugin)
allowed-connection = any

# Optional public key of peer allowed to connect.  May be used multiple times. (evt::net_plugin)
# peer-key = 

# Tuple of [PublicKey, WIF private key] (may specify multiple times) (evt::net_plugin)
# peer-private-key = 

# Maximum number of clients from which connections are accepted, use 0 for no limit (evt::net_plugin)
max-clients = 25

# number of seconds to wait before cleaning up dead connections (evt::net_plugin)
connection-cleanup-period = 30

# True to require exact match of peer network version. (evt::net_plugin)
network-version-match = 0

# number of blocks to retrieve in a chunk from any individual peer during synchronization (evt::net_plugin)
sync-fetch-span = 100

# maximum sizes of transaction or block messages that are sent without first sending a notice (evt::net_plugin)
max-implicit-request = 1500

# Enable block production, even if the chain is stale. (evt::producer_plugin)
# enable-stale-production = false

# Start this node in a state where production is paused (evt::producer_plugin)
pause-on-startup = false

# Limits the maximum time (in milliseconds) that is allowed a pushed transaction's code to execute before being considered invalid (evt::producer_plugin)
max-transaction-time = 30

# Limits the maximum age (in seconds) of the DPOS Irreversible Block for a chain this node will produce blocks on (evt::producer_plugin)
max-irreversible-block-age = -1

# ID of producer controlled by this node (e.g. inita; may specify multiple times) (evt::producer_plugin)
# producer-name = evt

# Signature providers (evt::producer_plugin)
signature-provider = EVT6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV=KEY:5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3

# MongoDB URI connection string, see: https://docs.mongodb.com/master/reference/connection-string/.
mongodb-uri = mongodb://127.0.0.1:27017

# Plugin(s) to enable, may be specified multiple times
plugin = evt::chain_api_plugin
plugin = evt::evt_api_plugin
